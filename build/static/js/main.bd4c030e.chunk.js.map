{"version":3,"sources":["services/socketService/index.ts","gameContext.ts","services/gameService/index.ts","components/joinRoom/index.tsx","components/game/index.tsx","Context/auth.js","Hooks/useToken.js","components/login/login.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["socket","url","Promise","rs","rj","io","on","err","console","log","defaultState","isInRoom","setInRoom","playerSymbol","setPlayerSymbol","isPlayerTurn","setPlayerTurn","isGameStarted","setGameStarted","React","createContext","GameService","roomId","emit","error","gameMatrix","matrix","listiner","message","JoinRoomContainer","styled","div","RoomIdInput","input","JoinButton","button","JoinRoom","props","useState","roomName","setRoomName","isJoining","setJoining","useContext","gameContext","joinRoom","e","preventDefault","socketService","trim","gameService","joinGameRoom","catch","alert","onSubmit","placeholder","value","onChange","target","type","disabled","GameContainer","RowContainer","Cell","borderTop","borderLeft","borderBottom","borderRight","PlayStopper","X","span","O","Game","setMatrix","checkGameState","i","length","row","j","push","every","column","m","v","useEffect","onGameUpdate","newMatrix","onStartGame","options","symbol","start","onGameWin","map","rowIdx","columnIdx","onClick","updateGame","currentPlayerWon","otherPlayerWon","gameWin","updateGameMatrix","Context","Provider","children","JSON","parse","window","localStorage","getItem","state","setState","setItem","stringify","removeItem","useToken","ctx","Login","setToken","status","setStatus","name","useRef","className","fetch","method","headers","body","current","res","json","data","_id","style","border","ref","AppContainer","WelcomeText","h1","MainContainer","App","token","user","setUser","connectSocket","connect","then","el","gameContextValue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd4c030e.chunk.js","sourcesContent":["import { io, Socket } from \"socket.io-client\";\nimport { DefaultEventsMap } from '@socket.io/component-emitter';\n\nclass SocketService {\n  public socket: Socket | null = null;\n\n  public connect(\n    url: string\n  ): Promise<Socket<DefaultEventsMap, DefaultEventsMap>> {\n    return new Promise((rs, rj) => {\n      this.socket = io(url);\n\n      if (!this.socket) return rj();\n\n      this.socket.on(\"connect\", () => {\n        rs(this.socket as Socket);\n      });\n\n      this.socket.on(\"connect_error\", (err) => {\n        console.log(\"Connection error: \", err);\n        rj(err);\n      });\n    });\n  }\n}\n\nexport default new SocketService();\n","import React from \"react\";\n\nexport interface IGameContextProps {\n  isInRoom: boolean;\n  setInRoom: (inRoom: boolean) => void;\n  playerSymbol: \"x\" | \"o\";\n  setPlayerSymbol: (symbol: \"x\" | \"o\") => void;\n  isPlayerTurn: boolean;\n  setPlayerTurn: (turn: boolean) => void;\n  isGameStarted: boolean;\n  setGameStarted: (started: boolean) => void;\n}\n\nconst defaultState: IGameContextProps = {\n  isInRoom: false,\n  setInRoom: () => {},\n  playerSymbol: \"x\",\n  setPlayerSymbol: () => {},\n  isPlayerTurn: false,\n  setPlayerTurn: () => {},\n  isGameStarted: false,\n  setGameStarted: () => {},\n};\n\nexport default React.createContext(defaultState);\n","import { Socket } from \"socket.io-client\";\nimport { IPlayMatrix, IStartGame } from \"../../components/game\";\n\nclass GameService {\n  public async joinGameRoom(socket: Socket, roomId: string): Promise<boolean> {\n    return new Promise((rs, rj) => {\n      socket.emit(\"join_game\", { roomId });\n      socket.on(\"room_joined\", () => rs(true));\n      socket.on(\"room_join_error\", ({ error }) => rj(error));\n    });\n  }\n\n  public async updateGame(socket: Socket, gameMatrix: IPlayMatrix) {\n    socket.emit(\"update_game\", { matrix: gameMatrix });\n  }\n\n  public async onGameUpdate(\n    socket: Socket,\n    listiner: (matrix: IPlayMatrix) => void\n  ) {\n    socket.on(\"on_game_update\", ({ matrix }) => listiner(matrix));\n  }\n\n  public async onStartGame(\n    socket: Socket,\n    listiner: (options: IStartGame) => void\n  ) {\n    socket.on(\"start_game\", listiner);\n  }\n\n  public async gameWin(socket: Socket, message: string) {\n    socket.emit(\"game_win\", { message });\n  }\n\n  public async onGameWin(socket: Socket, listiner: (message: string) => void) {\n    socket.on(\"on_game_win\", ({ message }) => listiner(message));\n  }\n}\n\nexport default new GameService();\n","import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport gameContext from \"../../gameContext\";\nimport gameService from \"../../services/gameService\";\nimport socketService from \"../../services/socketService\";\n\ninterface IJoinRoomProps {}\n\nconst JoinRoomContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 2em;\n`;\n\nconst RoomIdInput = styled.input`\n  height: 30px;\n  width: 20em;\n  font-size: 17px;\n  outline: none;\n  border: 1px solid #8e44ad;\n  border-radius: 3px;\n  padding: 0 10px;\n`;\n\nconst JoinButton = styled.button`\n  outline: none;\n  background-color: #8e44ad;\n  color: #fff;\n  font-size: 17px;\n  border: 2px solid transparent;\n  border-radius: 5px;\n  padding: 4px 18px;\n  transition: all 230ms ease-in-out;\n  margin-top: 1em;\n  cursor: pointer;\n\n  &:hover {\n    background-color: transparent;\n    border: 2px solid #8e44ad;\n    color: #8e44ad;\n  }\n`;\n\nexport function JoinRoom(props: IJoinRoomProps) {\n  const [roomName, setRoomName] = useState(\"\");\n  const [isJoining, setJoining] = useState(false);\n\n  const { setInRoom, isInRoom } = useContext(gameContext);\n\n  const handleRoomNameChange = (e: React.ChangeEvent<any>) => {\n    const value = e.target.value;\n    setRoomName(value);\n  };\n\n  const joinRoom = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const socket = socketService.socket;\n    if (!roomName || roomName.trim() === \"\" || !socket) return;\n\n    setJoining(true);\n\n    const joined = await gameService\n      .joinGameRoom(socket, roomName)\n      .catch((err) => {\n        alert(err);\n      });\n\n    if (joined) setInRoom(true);\n\n    setJoining(false);\n  };\n\n  return (\n    <form onSubmit={joinRoom}>\n      <JoinRoomContainer>\n        <h4>Enter Room ID to Join the Game</h4>\n        <RoomIdInput\n          placeholder=\"Room ID\"\n          value={roomName}\n          onChange={handleRoomNameChange}\n        />\n        <JoinButton type=\"submit\" disabled={isJoining}>\n          {isJoining ? \"Joining...\" : \"Joing\"}\n        </JoinButton>\n      </JoinRoomContainer>\n    </form>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport gameContext from \"../../gameContext\";\nimport gameService from \"../../services/gameService\";\nimport socketService from \"../../services/socketService\";\n\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: \"Zen Tokyo Zoo\", cursive;\n  position: relative;\n`;\n\nconst RowContainer = styled.div`\n  width: 100%;\n  display: flex;\n`;\n\ninterface ICellProps {\n  borderTop?: boolean;\n  borderRight?: boolean;\n  borderLeft?: boolean;\n  borderBottom?: boolean;\n}\n\nconst Cell = styled.div<ICellProps>`\n  width: 13em;\n  height: 9em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 20px;\n  cursor: pointer;\n  border-top: ${({ borderTop }) => borderTop && \"3px solid #8e44ad\"};\n  border-left: ${({ borderLeft }) => borderLeft && \"3px solid #8e44ad\"};\n  border-bottom: ${({ borderBottom }) => borderBottom && \"3px solid #8e44ad\"};\n  border-right: ${({ borderRight }) => borderRight && \"3px solid #8e44ad\"};\n  transition: all 270ms ease-in-out;\n\n  &:hover {\n    background-color: #8d44ad28;\n  }\n`;\n\nconst PlayStopper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 99;\n  cursor: default;\n`;\n\nconst X = styled.span`\n  font-size: 100px;\n  color: #8e44ad;\n  &::after {\n    content: \"X\";\n  }\n`;\n\nconst O = styled.span`\n  font-size: 100px;\n  color: #8e44ad;\n  &::after {\n    content: \"O\";\n  }\n`;\n\nexport type IPlayMatrix = Array<Array<string | null>>;\nexport interface IStartGame {\n  start: boolean;\n  symbol: \"x\" | \"o\";\n}\n\nexport function Game() {\n  const [matrix, setMatrix] = useState<IPlayMatrix>([\n    [null, null, null],\n    [null, null, null],\n    [null, null, null],\n  ]);\n\n  const {\n    playerSymbol,\n    setPlayerSymbol,\n    setPlayerTurn,\n    isPlayerTurn,\n    setGameStarted,\n    isGameStarted,\n  } = useContext(gameContext);\n\n  const checkGameState = (matrix: IPlayMatrix) => {\n    for (let i = 0; i < matrix.length; i++) {\n      let row = [];\n      for (let j = 0; j < matrix[i].length; j++) {\n        row.push(matrix[i][j]);\n      }\n\n      if (row.every((value) => value && value === playerSymbol)) {\n        return [true, false];\n      } else if (row.every((value) => value && value !== playerSymbol)) {\n        return [false, true];\n      }\n    }\n\n    for (let i = 0; i < matrix.length; i++) {\n      let column = [];\n      for (let j = 0; j < matrix[i].length; j++) {\n        column.push(matrix[j][i]);\n      }\n\n      if (column.every((value) => value && value === playerSymbol)) {\n        return [true, false];\n      } else if (column.every((value) => value && value !== playerSymbol)) {\n        return [false, true];\n      }\n    }\n\n    if (matrix[1][1]) {\n      if (matrix[0][0] === matrix[1][1] && matrix[2][2] === matrix[1][1]) {\n        if (matrix[1][1] === playerSymbol) return [true, false];\n        else return [false, true];\n      }\n\n      if (matrix[2][0] === matrix[1][1] && matrix[0][2] === matrix[1][1]) {\n        if (matrix[1][1] === playerSymbol) return [true, false];\n        else return [false, true];\n      }\n    }\n\n    //Check for a tie\n    if (matrix.every((m) => m.every((v) => v !== null))) {\n      return [true, true];\n    }\n\n    return [false, false];\n  };\n\n  const updateGameMatrix = (column: number, row: number, symbol: \"x\" | \"o\") => {\n    const newMatrix = [...matrix];\n\n    if (newMatrix[row][column] === null || newMatrix[row][column] === \"null\") {\n      newMatrix[row][column] = symbol;\n      setMatrix(newMatrix);\n    }\n\n    if (socketService.socket) {\n      gameService.updateGame(socketService.socket, newMatrix);\n      const [currentPlayerWon, otherPlayerWon] = checkGameState(newMatrix);\n      if (currentPlayerWon && otherPlayerWon) {\n        gameService.gameWin(socketService.socket, \"The Game is a TIE!\");\n        alert(\"The Game is a TIE!\");\n      } else if (currentPlayerWon && !otherPlayerWon) {\n        gameService.gameWin(socketService.socket, \"You Lost!\");\n        alert(\"You Won!\");\n      }\n\n      setPlayerTurn(false);\n    }\n  };\n\n  const handleGameUpdate = () => {\n    if (socketService.socket)\n      gameService.onGameUpdate(socketService.socket, (newMatrix) => {\n        setMatrix(newMatrix);\n        checkGameState(newMatrix);\n        setPlayerTurn(true);\n      });\n  };\n\n  const handleGameStart = () => {\n    if (socketService.socket)\n      gameService.onStartGame(socketService.socket, (options) => {\n        setGameStarted(true);\n        setPlayerSymbol(options.symbol);\n        if (options.start) setPlayerTurn(true);\n        else setPlayerTurn(false);\n      });\n  };\n\n  const handleGameWin = () => {\n    if (socketService.socket)\n      gameService.onGameWin(socketService.socket, (message) => {\n        console.log(\"Here\", message);\n        setPlayerTurn(false);\n        alert(message);\n      });\n  };\n\n\n  useEffect(() => {\n    handleGameUpdate();\n    handleGameStart();\n    handleGameWin();\n  }, []);\n\n\n  return (\n    <GameContainer>\n      {!isGameStarted && (\n        <h2>Waiting for Other Player to Join to Start the Game!</h2>\n      )}\n      {(!isGameStarted || !isPlayerTurn) && <PlayStopper />}\n      {matrix.map((row, rowIdx) => {\n        return (\n          <RowContainer>\n            {row.map((column, columnIdx) => (\n              <Cell\n                borderRight={columnIdx < 2}\n                borderLeft={columnIdx > 0}\n                borderBottom={rowIdx < 2}\n                borderTop={rowIdx > 0}\n                onClick={() =>\n                  updateGameMatrix(columnIdx, rowIdx, playerSymbol)\n                }\n              >\n                {column && column !== \"null\" ? (\n                  column === \"x\" ? (\n                    <X />\n                  ) : (\n                    <O />\n                  )\n                ) : null}\n              </Cell>\n            ))}\n          </RowContainer>\n        );\n      })}\n    </GameContainer>\n  );\n}\n","import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nfunction Provider({ children }) {\r\n\tconst [state, setState] = React.useState(\r\n\t\tJSON.parse(window.localStorage.getItem('userid')) || false,\r\n\t);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (state) {\r\n\t\t\twindow.localStorage.setItem('userid', JSON.stringify(state));\r\n\t\t} else {\r\n\t\t\twindow.localStorage.removeItem('userid');\r\n\t\t}\r\n\t}, [state]);\r\n\r\n\treturn (\r\n\t\t<Context.Provider value={{ state, setState }}>\r\n\t\t\t{children}\r\n\t\t</Context.Provider>\r\n\t);\r\n}\r\n\r\nexport { Context, Provider };","import React from 'react';\r\nimport { Context } from '../Context/auth';\r\n\r\nconst useToken = () => {\r\n\tconst ctx = React.useContext(Context);\r\n\r\n\treturn [ctx.state, ctx.setState];\r\n};\r\n\r\nexport default useToken;","import { useRef, useState } from \"react\";\r\nimport useToken from \"../../Hooks/useToken\";\r\n\r\nimport \"./login.css\"\r\n\r\nfunction Login() {\r\n    const [, setToken] = useToken();\r\n    const [status, setStatus] = useState(0);\r\n    const name = useRef();\r\n    const loginSubmit = (e) => {\r\n        e.preventDefault();\r\n        (async () => {\r\n            try {\r\n                const res = await fetch(\"https://backend6.onrender.com/user\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name: name.current.value,\r\n                    }),\r\n                });\r\n                const data = await res.json();\r\n                setStatus(data?.status);\r\n                setToken(data.data._id)\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <h1>Name</h1>\r\n            <form onSubmit={loginSubmit}>\r\n\r\n                <input placeholder=\"name\" className=\"login-input\" style={\r\n                    status === 400\r\n                        ? {\r\n                            border: \"1px solid #D61F1F\",\r\n                        }\r\n                        : {}\r\n                } ref={name} type=\"text\" />\r\n                {\r\n                    status === 400 ? <p> User alrady created</p> : \"\"\r\n                } <br />\r\n                <button className=\"login-btn\">Enter</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport { io } from \"socket.io-client\";\nimport socketService from \"./services/socketService\";\nimport { JoinRoom } from \"./components/joinRoom\";\nimport GameContext, { IGameContextProps } from \"./gameContext\";\nimport { Game } from \"./components/game\";\nimport Login from \"./components/login/login.jsx\";\nimport useToken from \"./Hooks/useToken.js\";\n\nconst AppContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1em;\n`;\n\nconst WelcomeText = styled.h1`\n  margin: 0;\n  color: #8e44ad;\n`;\n\nconst MainContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nfunction App() {\n  const [token] = useToken()\n  const [isInRoom, setInRoom] = useState(false);\n  const [playerSymbol, setPlayerSymbol] = useState<\"x\" | \"o\">(\"x\");\n  const [isPlayerTurn, setPlayerTurn] = useState(false);\n  const [isGameStarted, setGameStarted] = useState(false);\n  const [user, setUser] = useState()\n  const connectSocket = async () => {\n    const socket = await socketService\n      .connect(\"https://backend7.onrender.com\")\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n  const fetchMes = () => {\n    fetch(`https://backend6.onrender.com/user`, {\n      headers: { \"Content-Type\": \"application/json\", },\n    })\n      .then(res => res.json())\n      .then(data => {\n        data.map(el => {\n          if (el?._id == token) {\n            setUser(el?.name)\n          }\n        })\n      })\n\n\n  }\n\n  useEffect(() => {\n    connectSocket();\n    fetchMes();\n\n  }, []);\n\n  const gameContextValue: IGameContextProps = {\n    isInRoom,\n    setInRoom,\n    playerSymbol,\n    setPlayerSymbol,\n    isPlayerTurn,\n    setPlayerTurn,\n    isGameStarted,\n    setGameStarted,\n  };\n\n\n\n  if (token) {\n\n    return (\n      <GameContext.Provider value={gameContextValue}>\n        <AppContainer>\n          <WelcomeText>Welcome {user} to Tic-Tac-Toe</WelcomeText>\n          <MainContainer>\n            {!isInRoom && <JoinRoom />}\n            {isInRoom && <Game />}\n          </MainContainer>\n        </AppContainer>\n      </GameContext.Provider>\n    );\n  } else {\n    return (\n      <Login />\n    )\n  }\n\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider as AuthProvider } from './Context/auth.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}